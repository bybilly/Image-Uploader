<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Benne&display=swap" rel="stylesheet">
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Billy's Image Uploader</title>
    
    <style>
        * {
            font-family: Helvetica;
            box-sizing: border-box;
        }

        body {
            margin: 0;
        }

        h1 {
            font-size: 45px;
            margin: 0 0 15px 0;
        }

        header {
            text-align: center;
            padding: 70px 0;
            background: rgb(34, 71, 43);
            color: white;
            height: 230px;
        }

        .main {
            padding: 60px 0;
            text-align: center;
            min-height: calc(100vh - 345px);
        }

        #drop-area {
            border: 4px dashed #999;
            border-radius: 5px;
            width: 80%;
            margin: 0 auto;
            background: rgba(0, 0, 0, 0.05);
            box-shadow: 2px 2px 8px #666;
            padding: 40px 0;
            font-size: 17px;
            color: #888;
        }

        #drop-area.highlight {
            border-color: #000;
        }

        .drag {
            font-size: 25px;
            letter-spacing: 3px;
            color: #444;
        }

        .button {
            padding: 10px 18px;
            background: #3fd366;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            display: inline-block;
            margin-top: 0;
        }

        #file {
            display: none;
        }

        .meter {
            box-sizing: content-box;
            height: 20px;
            position: relative;
            background: #111;
            border-radius: 25px;
            padding: 5px;
            width: 80%;
            margin: 60px auto 0 auto;
        }

        .meter > span {
            display: block;
            height: 100%;
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
            border-top-left-radius: 20px;
            border-bottom-left-radius: 20px;
            background-color: rgb(49, 233, 98);
        }

        footer {
            display: flex;
            justify-content: space-between;
            padding: 30px 30px;
            font-size: 18px;
            background: #333;
            color: white;
            width: 100%;
            height: 115px;
        }
    </style>
</head>
<body>
    <header>
        <h1>Simple Image Uploader</h1>
        <p>Upload an image and share it with a link</p>
    </header>

    <div class="main">
        <div id="drop-area">
            <form action='/upload' method='post'>
                <p class="drag">DRAG AND DROP IMAGE HERE</p>
                <p>OR</p>
                <input type="file" name="file" id="file" accept="image/*" onchange="handleFile(this.files)">
                <p class="button" for="fileElem" id="pickFile" onclick="triggerClick()">CLICK TO PICK A FILE</p>
            </form>
        </div>
        <div class="meter" id="meter" style="display: none;">
            <span id="progress" style="width: 0%;"></span>
        </div>
    </div>

    <footer>
        <p>Made by Billy :)</p>
        <p>Files stored safely on AWS</p>
    </footer>

    <script>
        let dropArea = document.getElementById('drop-area');
        let progressBar = document.getElementById('progress');
        let fileInput = document.getElementById('file');
        let meter = document.getElementById('meter');
        let prog = 0;
        let progInt;

        let preventDefaults = (e) => {
            e.preventDefault();
            e.stopPropagation();
        }

        let addHighlight = (e) => {
            dropArea.classList.add('highlight');
        }

        let remHighlight = (e) => {
            dropArea.classList.remove('highlight');
        }

        let triggerClick = () => {
            fileInput.click();
        };

        let changeProgress = () => {
            if (prog < 100) prog++;
            if (prog == 100) {
                progressBar.style.borderRadius = "20px";
                clearInterval(progInt);
            }
            progressBar.style.width = prog + "%";
        }

        let uploadFile = (file) => {
            let url = '/upload';
            let formData = new FormData();
            formData.append('file', file);
            meter.style.display = "block";
            progInt = setInterval(changeProgress, 10);

            fetch(url, { method: 'POST', body: formData })
            .then(response => response.json())
            .then(res => {
                clearInterval(progInt);
                if (res.hasOwnProperty('error')) {
                    progressBar.style.width = "0%";
                    prog = 0;
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: res.error,
                    });
                    meter.style.display = "none";
                } else {
                    progressBar.style.width = "100%";
                    progressBar.style.borderRadius = "20px";
                    setTimeout(() => {
                        window.location.replace(res.url);
                    }, 500);
                }
            });
        }

        let filesDropped = (e) => {
            let file = e.dataTransfer.files[0];
            uploadFile(file);
        }

        let handleFile = (files) => {
            let file = files[0];
            uploadFile(file);
        }
        
        dropArea.addEventListener('dragenter', preventDefaults, false);
        dropArea.addEventListener('dragover', preventDefaults, false);
        dropArea.addEventListener('dragleave', preventDefaults, false);
        dropArea.addEventListener('drop', preventDefaults, false);

        dropArea.addEventListener('dragenter', addHighlight, false);
        dropArea.addEventListener('dragover', addHighlight, false);
        dropArea.addEventListener('dragleave', remHighlight, false);
        dropArea.addEventListener('drop', remHighlight, false);

        dropArea.addEventListener('drop', filesDropped, false);
    </script>
</body>
</html>